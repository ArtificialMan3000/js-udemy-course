{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/modules/calc.js","webpack:///./src/js/modules/cards.js","webpack:///./src/js/modules/forms.js","webpack:///./src/js/modules/modal.js","webpack:///./src/js/modules/slider.js","webpack:///./src/js/modules/tabs.js","webpack:///./src/js/modules/timer.js","webpack:///./src/js/script.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8DAA8D,GAAG;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA,sB;;;;;;;;;;;;AC1Ja;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,+CAA+C,IAAI,WAAW,WAAW;AACzE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iCAAiC;AACxD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;;AAEA,uB;;;;;;;;;;;;AClHa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD,oCAAoC,QAAQ;AAC5C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA,uB;;;;;;;;;;;;ACvGa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uB;;;;;;;;;;;;AC5Ea;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gGAAgG,MAAM;AACtG;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gGAAgG,MAAM;AACtG;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA,4DAA4D,8BAA8B;AAC1F;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wB;;;;;;;;;;;;AC/La;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;;AAEA,sB;;;;;;;;;;;;ACpDa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,IAAI;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uB;;;;;;;;;;;;ACzEa;;AAEb;AACA;AACA,iBAAiB,mBAAO,CAAC,gDAAgB;AACzC,kBAAkB,mBAAO,CAAC,kDAAiB;AAC3C,kBAAkB,mBAAO,CAAC,kDAAiB;AAC3C,kBAAkB,mBAAO,CAAC,kDAAiB;AAC3C,iBAAiB,mBAAO,CAAC,gDAAgB;AACzC,kBAAkB,mBAAO,CAAC,kDAAiB;AAC3C,mBAAmB,mBAAO,CAAC,oDAAkB;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,E","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/js/script.js\");\n","'use strict';\r\n\r\n// Калькулятор калорий\r\nfunction calc () {\r\n    // Элемент калькулятора\r\n    const calculatorElem = document.querySelector('.calculating__field');\r\n    // Элемент с выбором пола\r\n    const genderElem = calculatorElem.querySelector('#gender');\r\n    // Элемент с выбором конституции\r\n    const constitutionElem = calculatorElem.querySelector('#constitution');\r\n    // Элемент с выбором физ. активности\r\n    const activityElem = calculatorElem.querySelector('#activity');\r\n    // Элемент, содержащий число - результат вычислений\r\n    const calculatingResultNumElem = calculatorElem.querySelector('.calculating__result > span');\r\n    // Коэффициенты активности\r\n    const ACTIVITY_COEFFICIENTS = {\r\n        low: 1.2,\r\n        small: 1.375,\r\n        medium: 1.55,\r\n        high: 1.725\r\n    };\r\n\r\n    // Рассчитывает калорийность\r\n    const calcCalories = (gender, weight, height, age, activity) => {\r\n        // Если отсутствует хотя бы один параметр, отменяем расчеты\r\n        if (!gender || !weight || !height || !age || !ACTIVITY_COEFFICIENTS[activity]) {\r\n            return false;\r\n        }\r\n        let result;\r\n        if (gender === 'male') {\r\n            result = 88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age);\r\n        } else if (gender === 'female') {\r\n                result = 447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age);\r\n        }\r\n        return Math.round(result * ACTIVITY_COEFFICIENTS[activity]);\r\n    };\r\n\r\n    // Получает данные из формы\r\n    const getCalcData = () => {\r\n        const gender = genderElem.querySelector('[data-active]').dataset.gender;\r\n        const weight = Number(constitutionElem.querySelector('#weight').value);\r\n        const height = Number(constitutionElem.querySelector('#height').value);\r\n        const age = Number(constitutionElem.querySelector('#age').value);\r\n        const activity = activityElem.querySelector('[data-active]').dataset.activity;\r\n        return {gender, weight, height, age, activity};\r\n    };\r\n\r\n    // Обновляет выводимое количество калорий\r\n    const updateCalories = () => {\r\n        // Получаем данные\r\n        const data = getCalcData();\r\n        // Рассчитываем калории\r\n        const calories = calcCalories(data.gender, data.weight, data.height, data.age, data.activity);\r\n        // Выводим результат на страницу\r\n        if (calories && isFinite(calories)) {\r\n            calculatingResultNumElem.textContent = calories;\r\n        } else {\r\n            calculatingResultNumElem.textContent = '_____';\r\n        }\r\n    };\r\n\r\n    // Деактивирует кнопку\r\n    const deactivateButton = (button) => {\r\n        button.classList.remove('calculating__choose-item_active');\r\n        button.removeAttribute('data-active');\r\n    };\r\n\r\n    // Деактивирует группу кнопок\r\n    const deactivateButtonsGroup = (buttonsGroupElem) => {\r\n        const buttons = buttonsGroupElem.querySelectorAll('.calculating__choose-item');\r\n        buttons.forEach((button) => {\r\n            deactivateButton(button);\r\n        });\r\n    };\r\n\r\n    // Активирует кнопку\r\n    const activateButton = (button) => {\r\n        button.classList.add('calculating__choose-item_active');\r\n        button.setAttribute('data-active', '');\r\n    };\r\n\r\n    // Переключает кнопку\r\n    const switchButton = (id) => {\r\n        // Целевая кнопка\r\n        const targetButton = calculatorElem.querySelector(`#${id}`);\r\n        // Группа кнопок, в которой происходит переключение\r\n        const targetButtonGroup = targetButton.closest('.calculating__choose');\r\n        // Деактивируем все кнопки в группе\r\n        deactivateButtonsGroup(targetButtonGroup);\r\n        // Активируем целевую кнопку\r\n        activateButton(targetButton);\r\n        // Сохраняем данные в localStorage\r\n        localStorage.setItem(targetButtonGroup.id, id);\r\n    };\r\n\r\n    // Устанавливает начальное положение кнопок\r\n    const setStartButtons = () => {\r\n        if (localStorage.getItem('gender')) {\r\n            switchButton(localStorage.getItem('gender'));\r\n        }\r\n        if (localStorage.getItem('activity')) {\r\n            switchButton(localStorage.getItem('activity'));\r\n        }\r\n    };\r\n\r\n    // Помечает поле как ошибочное\r\n    const setErrorField = (field) => {\r\n        field.classList.add('calculating__choose-item_error');\r\n    };\r\n\r\n    // Убирает пометку поля как ошибочного\r\n    const removeErrorField = (field) => {\r\n        field.classList.remove('calculating__choose-item_error');\r\n    };\r\n\r\n    // Проверяет есть ли ошибка в введённом в поле значении и помечает его соответствующим образом\r\n    const validateField = (field) => {\r\n        // Если введено что-то, кроме чисел, то помечаем поле как ошибочное\r\n        if (field.value.match(/\\D/g)) {\r\n            setErrorField(field);\r\n        } else {\r\n            removeErrorField(field);\r\n        }\r\n    };\r\n\r\n    // Вешаем обработчики изменения значений формы\r\n    genderElem.addEventListener('click', (evt) => {\r\n        const targetButton = evt.target.closest('.calculating__choose-item');\r\n        if (targetButton) {\r\n            switchButton(targetButton.id);\r\n            updateCalories();\r\n        }\r\n    });\r\n\r\n    constitutionElem.addEventListener('input', (evt) => {\r\n        const targetField = evt.target.closest('.calculating__choose-item');\r\n        if (targetField) {\r\n            validateField(targetField);\r\n            updateCalories();\r\n        }\r\n    });\r\n\r\n    activityElem.addEventListener('click', (evt) => {\r\n        const targetButton = evt.target.closest('.calculating__choose-item');\r\n        if (targetButton) {\r\n            switchButton(targetButton.id);\r\n            updateCalories();\r\n        }\r\n    });\r\n\r\n    setStartButtons();\r\n    updateCalories();\r\n}\r\n\r\nmodule.exports = calc;","'use strict';\r\n\r\n// Используем классы для создания карточек меню\r\nfunction cards () {\r\n    // Класс карточки меню\r\n    class MenuCard {\r\n        constructor (imgSrc, imgAlt, title, description, price, ...classes) {\r\n            this.imgSrc = imgSrc;\r\n            this.imgAlt = imgAlt;\r\n            this.title = title;\r\n            this.description = description;\r\n            this.price = price;\r\n            this.classes = classes;\r\n            this.defaultClassName = 'menu__item';\r\n            // Курс гривны к доллару\r\n            this.transfer = 27;\r\n            // Конвертируем\r\n            this.changeToUAH();\r\n            // Создаём карточку\r\n            this.createCardElem();\r\n            // Наполняем карточку данными\r\n            this.fillCard();\r\n        }\r\n\r\n        // Конвертирует доллары в гривны\r\n        changeToUAH () {\r\n            this.price = this.price * this.transfer;\r\n        }\r\n\r\n        // Создаёт пустую карточку меню\r\n        createCardElem () {\r\n            // Создаём элемент\r\n            const cardElem = document.createElement('div');\r\n            // Устанавливаем классы\r\n            if (this.classes.length === 0) {\r\n                cardElem.classList.add(this.defaultClassName);\r\n            } else {\r\n                this.classes.forEach((className) => {\r\n                    cardElem.classList.add(className);\r\n                });\r\n            }\r\n            // Записываем в элемент всю вёрстку карточки\r\n            cardElem.innerHTML =\r\n                `<img>\r\n                <h3 class=\"menu__item-subtitle\"></h3>\r\n                <div class=\"menu__item-descr\"></div>\r\n                <div class=\"menu__item-divider\"></div>\r\n                <div class=\"menu__item-price\">\r\n                    <div class=\"menu__item-cost\">Цена:</div>\r\n                    <div class=\"menu__item-total\"><span></span> грн/день</div>\r\n                </div>`;\r\n            this.cardElem = cardElem;\r\n        }\r\n\r\n        // Наполняет карточку данными\r\n        fillCard () {\r\n            if (this.cardElem) {\r\n                // Устанавливаем аттрибуты и содержимое тегов\r\n                const imgElem = this.cardElem.querySelector('img');\r\n                const titleElem = this.cardElem.querySelector('.menu__item-subtitle');\r\n                const descrElem = this.cardElem.querySelector('.menu__item-descr');\r\n                const priceNumberElem = this.cardElem.querySelector('.menu__item-total > span');\r\n                imgElem.setAttribute('src', this.imgSrc);\r\n                imgElem.setAttribute('alt', this.imgAlt);\r\n                titleElem.textContent = this.title;\r\n                descrElem.textContent = this.description;\r\n                priceNumberElem.textContent = this.price;\r\n            } else {\r\n                // Если элемент карточки не создан - ошибка\r\n                throw new Error ('Карточки меню не существует');\r\n            }\r\n        }\r\n\r\n        // Вставляет карточку меню в указанный элемент\r\n        insertCard (elem) {\r\n            if (this.cardElem) {\r\n                elem.append(this.cardElem);\r\n            } else {\r\n                // Если элемент карточки не создан - ошибка\r\n                throw new Error ('Карточки меню не существует');\r\n            }\r\n        }\r\n    }\r\n\r\n    // Запрашивает данные с сервера\r\n    const getResources = async (url) => {\r\n        // Посылаем запрос\r\n        const res = await fetch(url);\r\n\r\n        // Если статус ответа не успешный - ошибка\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status ${res.status}`);\r\n        }\r\n\r\n        // Возвращаем ответ в виде JSON\r\n        return await res.json();\r\n    };\r\n\r\n    // Контейнер карточек меню\r\n    const menuFieldContainerElem = document.querySelector('.menu__field > .container');\r\n    // Фрагмент с карточками\r\n    const menuCardsFragment = document.createDocumentFragment();\r\n    // Запрашиваем данные и создаём карточку\r\n    getResources('http://localhost:3000/menu').then(data => {\r\n        data.forEach(({img, altimg, title, descr, price}) => {\r\n            const menuCard = new MenuCard(img, altimg, title, descr, price);\r\n            // Вставляем карточку во фрагмент\r\n            menuCard.insertCard(menuCardsFragment);\r\n        });\r\n        // Вставляем фрагмент на страницу\r\n        menuFieldContainerElem.append(menuCardsFragment);\r\n    });\r\n}\r\n\r\nmodule.exports = cards;","'use strict';\r\n\r\n// Формы\r\nfunction forms () {\r\n    // Все формы на сайте\r\n    const forms = document.querySelectorAll('form');\r\n\r\n    // Сообщения о статусе отправки формы\r\n    const MESSAGES = {\r\n        loading: 'img/form/spinner.svg',\r\n        success: 'Спасибо! Мы скоро с Вами свяжемся',\r\n        error: 'Что-то пошло не так...'\r\n    };\r\n\r\n    // Показывает сообщение о результате отправки формы\r\n    const showThanksModal = (message) => {\r\n        // Элемент модального окна\r\n        const modalElem = document.querySelector('.modal');\r\n        // Элемент диалоговой части окна\r\n        const prevModalDialogElem = document.querySelector('.modal__dialog');\r\n        // Скрываем диалоговую часть\r\n        prevModalDialogElem.classList.add('hide');\r\n        \r\n        // Создаём элемент для сообщения\r\n        const thanksModal = document.createElement('div');\r\n        thanksModal.classList.add('modal__dialog');\r\n        thanksModal.innerHTML = `\r\n        <div class=\"modal__content\">\r\n        <div data-close class=\"modal__close\">&times;</div>\r\n        <div class=\"modal__title\">${message}</div>\r\n        </div>\r\n        `;\r\n        // Добавляем элемент с сообщением в модальное окно\r\n        modalElem.append(thanksModal);\r\n        // Открываем модалку\r\n        openModal();\r\n\r\n        // Через 4 секунды после показа удаляем элемент с сообщением, возвращаем диалоговую часть и закрываем окно\r\n        setTimeout(() => {\r\n            thanksModal.remove();\r\n            prevModalDialogElem.classList.remove('hide');\r\n            closeModal();\r\n        }, 4000);\r\n    };\r\n\r\n    // Отправляет JSON-данные на сервер\r\n    const postData = async (url, data) => {\r\n        const res = await fetch(url, {\r\n            method: 'POST',\r\n            body: data,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        });\r\n\r\n        return await res.json();\r\n    };\r\n\r\n    // Добавляет на форму обработчик для отправки на сервер\r\n    const bindPostData = (form) => {\r\n        form.addEventListener('submit', (evt) => {\r\n            evt.preventDefault();\r\n\r\n            // Показываем спиннер, пока происходит отправка данных\r\n            const statusMessage = document.createElement('img');\r\n            statusMessage.src = MESSAGES.loading;\r\n            statusMessage.style.cssText = `\r\n                display: block;\r\n                margin: 0 auto;\r\n            `;\r\n            form.insertAdjacentElement('afterend', statusMessage);\r\n\r\n            // Создаём объект FormData из формы\r\n            let formData = new FormData(form);\r\n            // Преобразуем FormData в JSON\r\n            const formDataJson = JSON.stringify(Object.fromEntries(formData.entries()));\r\n\r\n            // Отправляем запрос\r\n            postData('http://localhost:3000/requests', formDataJson)\r\n            .then((data) => {\r\n                console.log(data);\r\n                // Показываем сообщение об успехе и убираем спиннер\r\n                showThanksModal(MESSAGES.success);\r\n                statusMessage.src = '';\r\n            })\r\n            .catch(() => {\r\n                // Показываем сообщение об ошибке и убираем спиннер\r\n                showThanksModal(MESSAGES.error);\r\n                statusMessage.src = '';\r\n            })\r\n            .finally(() => {\r\n                // Очищаем форму\r\n                form.reset();\r\n            });\r\n        });\r\n    };\r\n\r\n    // Добавляем всем формам обработчики для отправки данных\r\n    forms.forEach((form) => {\r\n        bindPostData(form);\r\n    });\r\n}\r\n\r\nmodule.exports = forms;","'use strict';\r\n\r\n// Модальное окно\r\nfunction modal () {\r\n    // Элемент модального окна\r\n    const modalElem = document.querySelector('.modal');\r\n    // Элемент диалоговой части модального окна\r\n    const modalDialogElem = document.querySelector('.modal__dialog');\r\n    // Кнопки вызова модального окна\r\n    const modalCallElems = document.querySelectorAll('[data-modal');\r\n\r\n    // Открывает модальное окно\r\n    const openModal = () => {\r\n        if (modalElem) {\r\n            modalElem.classList.add('modal_opened');\r\n            // Запрещаем странице прокручиваться по вертикали\r\n            document.body.style.overflowY = 'hidden';\r\n            // Очищаем таймер самостоятельного показа модального окна\r\n            clearInterval(modalTimerId);\r\n        }\r\n    };\r\n\r\n    // Закрывает модальное окно\r\n    const closeModal = () => {\r\n        if (modalElem) {\r\n            modalElem.classList.remove('modal_opened');\r\n            // Разрешаем странице прокручиваться по вертикали\r\n            document.body.style.overflowY = '';\r\n        }\r\n    };\r\n\r\n    // Устанавливаем обработчики на кнопки вызова модального окна\r\n    if (modalCallElems) {\r\n        modalCallElems.forEach((modalCallElem) => {\r\n            modalCallElem.addEventListener('click', (evt) => {\r\n                evt.preventDefault();\r\n                // Открываем окно\r\n                openModal();\r\n            });\r\n        });\r\n    }\r\n\r\n    // Устанавливаем обработчик на клик вне модального окна\r\n    if (modalElem && modalDialogElem) {\r\n        modalElem.addEventListener('click', (evt) => {\r\n            // Закрываем окно, если клик был вне диалоговой части\r\n            if (!evt.target.closest('.modal__dialog') || evt.target.hasAttribute('data-close')) {\r\n                closeModal();\r\n            }\r\n        });\r\n    }\r\n\r\n    // Устанавливаем обработчик на нажатие ESC\r\n    if (modalElem) {\r\n        document.addEventListener('keydown', (evt) => {\r\n            if (evt.code === 'Escape' && modalElem.classList.contains('modal_opened')) {\r\n                closeModal();\r\n            }\r\n        });\r\n    }\r\n\r\n    // Устанавливаем таймаут на автоматическое открытие модального окна через 50 секунд\r\n    const modalTimerId = setTimeout(openModal, 50000);\r\n\r\n    // Обработчик прокрутки страницы\r\n    const windowScrollHandler = () => {\r\n        if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight) {\r\n            openModal();\r\n            window.removeEventListener('scroll', windowScrollHandler);\r\n        }\r\n    };\r\n\r\n    // Устанавливаем обработчик на прокрутку страницы\r\n    window.addEventListener('scroll', windowScrollHandler);\r\n}\r\n\r\nmodule.exports = modal;","'use strict';\r\n\r\n// Слайдер\r\nfunction slider () {\r\n    // Элемент слайдера\r\n    const sliderElem = document.querySelector('.offer__slider');\r\n    // Элемент счётчика слайдов\r\n    const sliderCounterElem = sliderElem ? sliderElem.querySelector('.offer__slider-counter') : null;\r\n    // Стрелка \"назад\"\r\n    const sliderCounterPrevElem = sliderCounterElem ? sliderCounterElem.querySelector('.offer__slider-prev') : null;\r\n    // Стрелка \"вперёд\"\r\n    const sliderCounterNextElem = sliderCounterElem ? sliderCounterElem.querySelector('.offer__slider-next') : null;\r\n    // Элемент с номером текущего слайда\r\n    const sliderCounterCurrentElem = sliderCounterElem ? sliderCounterElem.querySelector('#current') : null;\r\n    // Элемент с номером общего количества слайдов\r\n    const sliderCounterTotalElem = sliderCounterElem ? sliderCounterElem.querySelector('#total') : null;\r\n    // Контейнер слайдов\r\n    const sliderWrapperElem = sliderElem ? sliderElem.querySelector('.offer__slider-wrapper') : null;\r\n    // \"Карусель слайдов\"\r\n    const sliderCarouselElem = sliderWrapperElem ? sliderWrapperElem.querySelector('.offer__slider-carousel') : null;\r\n    // Элементы слайдов\r\n    const slideElems = sliderWrapperElem ? sliderWrapperElem.querySelectorAll('.offer__slide') : null;\r\n    // Индекс стартового слайда\r\n    const START_SLIDE_INDEX = 0;\r\n    // Ширина слайдера\r\n    const sliderWidth = window.getComputedStyle(sliderWrapperElem).width;\r\n\r\n    // Создаёт элемент навигации\r\n    const createNavigationElem = () => {\r\n        // Создаём сам элемент навигации\r\n        const navigationElem = document.createElement('ol');\r\n        navigationElem.classList.add('offer__slider-carousel-indicators');\r\n        // Создаём фрагмент с индикаторами слайдов\r\n        const slideIndicatorsFrag = document.createDocumentFragment();\r\n        // Заполняем фрагмент\r\n        slideElems.forEach((slide, index) => {\r\n            slideIndicatorsFrag.append(createSlideIndicator(index));\r\n        });\r\n        // Кладём фрагмент в элемент навигации\r\n        navigationElem.append(slideIndicatorsFrag);\r\n        return navigationElem;\r\n    };\r\n\r\n    // Создаёт индикатор слайда\r\n    const createSlideIndicator = (index) => {\r\n        const slideIndicator = document.createElement('li');\r\n        slideIndicator.classList.add('offer__slider-dot');\r\n        slideIndicator.setAttribute('data-slide', index);\r\n        return slideIndicator;\r\n    };\r\n\r\n    // Добавляем на слайдер навигацию\r\n    const sliderNavigationElem = createNavigationElem();\r\n    sliderElem.append(sliderNavigationElem);\r\n    \r\n    // Устанавливает ширину \"карусели\"\r\n    const setCarouselWidth = () => {\r\n        sliderCarouselElem.style.width = 100 * slideElems.length + '%';\r\n    };\r\n\r\n    // Устанавливает всем слайдам одинаковую ширину\r\n    const setSlidesWidth = () => {\r\n        slideElems.forEach((slide) => {\r\n            slide.style.width = sliderWidth;\r\n        });\r\n    };\r\n\r\n    // Деактивирует слайд\r\n    const deactivateSlide = (index) => {\r\n        if (slideElems && slideElems[index]) {\r\n            slideElems[index].removeAttribute('data-active');\r\n        }\r\n        // Деактивируем индикатор\r\n        if (sliderNavigationElem) {\r\n            const currSliderNavigationElem = sliderNavigationElem.querySelector(`[data-slide=\"${index}\"]`);\r\n            currSliderNavigationElem.classList.remove('offer__slider-dot_active');\r\n        }\r\n    };\r\n\r\n    // Деактивирует все слайды\r\n    const deactivateAllSlides = () => {\r\n        if (slideElems) {\r\n            slideElems.forEach((slide, index) => {\r\n                deactivateSlide(index);\r\n            });\r\n        }\r\n    };\r\n\r\n    // Активирует слайд\r\n    const activateSlide = (index) => {\r\n        if (slideElems && slideElems[index]) {\r\n            slideElems[index].setAttribute('data-active', true);\r\n        }\r\n        // Активируем индикатор\r\n        if (sliderNavigationElem) {\r\n            const currSliderNavigationElem = sliderNavigationElem.querySelector(`[data-slide=\"${index}\"]`);\r\n            currSliderNavigationElem.classList.add('offer__slider-dot_active');\r\n        }\r\n    };\r\n\r\n    // Изменяет номер текущего слайда\r\n    const changeCurrSlideNum = (index) => {\r\n        if (sliderCounterCurrentElem) {\r\n            sliderCounterCurrentElem.textContent = setZero(Number(index) + 1);\r\n        }\r\n    };\r\n\r\n    // Выводит общее количество слайдов\r\n    const showSlidesTotal = () => {\r\n        sliderCounterTotalElem.textContent = setZero(slideElems.length);\r\n    };\r\n\r\n    // Проставляет индексы слайдов\r\n    const setSlidesIndexes = () => {\r\n        if (slideElems) {\r\n            slideElems.forEach((slide, index) => {\r\n                slide.setAttribute('data-index', index);\r\n            });\r\n        }\r\n    };\r\n\r\n    // Переключает на заданный слайд\r\n    const switchToSlide = (index) => {\r\n        // Прокручиваем карусель\r\n        sliderCarouselElem.style.transform = `translateX(-${index * parseInt(sliderWidth)}px)`;\r\n        // Меняем активный слайд\r\n        deactivateAllSlides();\r\n        activateSlide(index);\r\n        // Подсвечиваем индикатор слайда\r\n\r\n        // Изменяем номер текущего слайда\r\n        changeCurrSlideNum(index);\r\n    };\r\n\r\n    // Переключает на следующий слайд\r\n    const switchToNextSlide = (index) => {\r\n        let nextSlideIndex = Number(index) + 1;\r\n        if (nextSlideIndex >= slideElems.length) {\r\n            nextSlideIndex = 0;\r\n        }\r\n        switchToSlide(nextSlideIndex);\r\n    };\r\n\r\n    // Переключает на предыдущий слайд\r\n    const switchToPrevSlide = (index) => {\r\n        let prevSlideIndex = Number(index) - 1;\r\n        if (prevSlideIndex < 0) {\r\n            prevSlideIndex = slideElems.length - 1;\r\n        }\r\n        switchToSlide(prevSlideIndex);\r\n    };\r\n\r\n    // Определяет индекс активного слайда\r\n    const getCurrSlideIndex = () => {\r\n        const currSlide = sliderWrapperElem.querySelector('[data-active]');\r\n        const currSlideIndex = currSlide.dataset.index;\r\n        return Number(currSlideIndex);\r\n    };\r\n\r\n    // Устанавливаем обработчик на навигацию для переключения слайдов\r\n    sliderNavigationElem.addEventListener('click', (evt) => {\r\n        const targetIndicator = evt.target.closest('.offer__slider-dot');\r\n        if (targetIndicator) {\r\n            switchToSlide(targetIndicator.dataset.slide);\r\n        }\r\n    });\r\n\r\n    // Вешаем обработчик на кнопку \"назад\"\r\n    sliderCounterPrevElem.addEventListener('click', () => {\r\n        const currSlideIndex = getCurrSlideIndex();\r\n        switchToPrevSlide(currSlideIndex);\r\n    });\r\n\r\n    // Вешаем обработчик на кнопку \"вперёд\"\r\n    sliderCounterNextElem.addEventListener('click', () => {\r\n        const currSlideIndex = getCurrSlideIndex();\r\n        switchToNextSlide(currSlideIndex);\r\n    });\r\n\r\n    // Устанавливаем ширину \"карусели\"\r\n    setCarouselWidth();\r\n    // Устанавливаем ширину слайдов\r\n    setSlidesWidth();\r\n    // Проставляем слайдам индексы\r\n    setSlidesIndexes();\r\n    // Выводим общее количество слайдов\r\n    showSlidesTotal();\r\n    // Переключаемся на стартовый слайд\r\n    switchToSlide(START_SLIDE_INDEX);\r\n}\r\n\r\nmodule.exports = slider;","'use strict';\r\n\r\n// Табы\r\nfunction tabs () {\r\n    // Заголовоки табов\r\n    const tabheaderItemElems = document.querySelectorAll('.tabheader__item'),\r\n        // Содержимое табов\r\n        tabcontentElems = document.querySelectorAll('.tabcontent'),\r\n        // Родительский элемент заголовков табов\r\n        tabheaderItemsParentElem = document.querySelector('.tabheader__items');\r\n\r\n    // Скрывает все табы\r\n    const hideTabContent = () => {\r\n        // Скрываем всё содержимое табов\r\n        tabcontentElems.forEach((tabcontentElem) => {\r\n            tabcontentElem.classList.add('tabcontent_hide');\r\n            tabcontentElem.classList.remove('fade');\r\n        });\r\n        // Деактивируем все заголовки табов\r\n        tabheaderItemElems.forEach((tabheaderItemElem) => {\r\n            tabheaderItemElem.classList.remove('tabheader__item_active');\r\n        });\r\n    };\r\n\r\n    // Показывает таб\r\n    const showTabContent = (index = 0) => {\r\n        // Показываем содержимое таба\r\n        tabcontentElems[index].classList.remove('tabcontent_hide');\r\n        tabcontentElems[index].classList.add('fade');\r\n        // Активируем заголовок таба\r\n        tabheaderItemElems[index].classList.add('tabheader__item_active');\r\n    };\r\n\r\n    // Скрываем табы\r\n    hideTabContent();\r\n    // Показываем первый таб\r\n    showTabContent();\r\n\r\n    // Вешаем обработчик на родительский элемент заголовков табов\r\n    tabheaderItemsParentElem.addEventListener('click', (evt) => {\r\n        // Если клик произошёл по заголовку таба, скрываем все табы и показываем соответствующий таб\r\n        if (evt.target && evt.target.matches('.tabheader__item')) {\r\n            tabheaderItemElems.forEach((tabheaderItemElem, index) => {\r\n                if (tabheaderItemElem === evt.target) {\r\n                    hideTabContent();\r\n                    showTabContent(index);\r\n                }\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nmodule.exports = tabs;","'use strict';\r\n\r\n// Таймер\r\nfunction timer () {\r\n    // Целевое время\r\n    const DEADLINE = '2021-07-13';\r\n\r\n    // Получает время оставшееся до endtime в виде объекта\r\n    const getTimeRemaining = (endtime) => {\r\n        // Время в милисекундах\r\n        const time = Date.parse(endtime) - Date.parse(new Date());\r\n        // Количество дней\r\n        const days = Math.floor(time / (1000 * 60 * 60 * 24));\r\n        // Количество часов\r\n        const hours = Math.floor((time / (1000 * 60 * 60)) % 24);\r\n        // Количество минут\r\n        const minutes = Math.floor((time / (1000 * 60)) % 60);\r\n        // Количество секунд\r\n        const seconds = Math.floor((time / 1000) % 60);\r\n\r\n        return {\r\n            total: time,\r\n            days,\r\n            hours,\r\n            minutes,\r\n            seconds\r\n        };\r\n    };\r\n\r\n    // Добавляет ноль к числу, если оно одноциферное\r\n    const setZero = (num) => {\r\n        num = Number(num);\r\n        if (num >= 0 && num < 10) {\r\n            return `0${num}`;\r\n        }\r\n        return num;\r\n    };\r\n\r\n    // Устанавливает время на таймере\r\n    const setClock = (selector, endtime) => {\r\n        const timer = document.querySelector(selector);\r\n        const days = timer.querySelector('#days');\r\n        const hours = timer.querySelector('#hours');\r\n        const minutes = timer.querySelector('#minutes');\r\n        const seconds = timer.querySelector('#seconds');\r\n        // Обновляет время\r\n        const updateClock = () => {\r\n            // Получаем время, оставшееся до целевого времени\r\n            const time = getTimeRemaining(endtime);\r\n\r\n            // Выводим время на страницу\r\n            days.innerHTML = setZero(time.days);\r\n            hours.innerHTML = setZero(time.hours);\r\n            minutes.innerHTML = setZero(time.minutes);\r\n            seconds.innerHTML = setZero(time.seconds);\r\n\r\n            // Очищаем интервал, если целевое время достигнуто\r\n            if (time.total <= 0) {\r\n                clearInterval(timerIntervalId);\r\n            }\r\n        };\r\n\r\n        // Устанавливаем обновление времени каждую секунду\r\n        const timerIntervalId = setInterval(updateClock, 1000);\r\n\r\n        // Первое обновление времени\r\n        updateClock();\r\n    };\r\n\r\n    // Устанавливаем таймер\r\n    setClock('.timer', DEADLINE);\r\n}\r\n\r\nmodule.exports = timer;","'use strict';\r\n\r\n// Скрипт начнёт выполняться после полной загрузки контента\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    const tabs = require('./modules/tabs');\r\n    const modal = require('./modules/modal');\r\n    const timer = require('./modules/timer');\r\n    const cards = require('./modules/cards');\r\n    const calc = require('./modules/calc');\r\n    const forms = require('./modules/forms');\r\n    const slider = require('./modules/slider');\r\n\r\n    tabs();\r\n    modal();\r\n    timer();\r\n    cards();\r\n    calc();\r\n    forms();\r\n    slider();\r\n});"],"sourceRoot":""}